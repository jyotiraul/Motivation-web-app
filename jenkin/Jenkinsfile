pipeline {
    agent any

    environment {
        DOCKER_HUB_CREDENTIALS = credentials('dockerhub-cred')
        IMAGE_NAME = 'rauljyoti/motivation-web-app:latest'
        TF_VAR_docker_image = 'rauljyoti/motivation-web-app:latest'
    }

    triggers {
        githubPush()
    }

    stages {
        stage('Check Docker') {
            steps {
                sh 'docker --version'
            }
        }

        stage('Clone Repo') {
            steps {
                cleanWs()
                git credentialsId: 'github-token',
                    url: 'https://github.com/jyotiraul/sparknet-motivation-web-app.git',
                    branch: 'main'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("${IMAGE_NAME}")
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerhub-cred') {
                        docker.image("${IMAGE_NAME}").push()
                    }
                }
            }
        }

        stage('Terraform Deploy Infra') {
            steps {
                dir('infra') {
                    withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-credential']]) {
                        sh '''
                            set -e
                            rm -rf .terraform
                            terraform init -input=false -upgrade
                            terraform validate
                            terraform plan -var="key_name=lab3" -out=tfplan
                            terraform apply -auto-approve tfplan
                        '''
                    }
                }
            }
        }
    }

    post {
        success {
            echo '‚úÖ Pipeline succeeded!'
        }
        failure {
            echo '‚ùå Pipeline failed!'
        }
        always {
            echo 'üåÄ Pipeline execution complete.'
        }
    }
}
